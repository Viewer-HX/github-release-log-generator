#!/usr/bin/env python3
"""
Simple Email Test Script
Tests the email functionality directly without the full CrewAI system
"""

import os
import sys
from email_service import EmailService
from config import Config

def test_email_connection():
    """Test email connection and sending"""
    print("🧪 Testing Email Configuration...")
    print("=" * 50)
    
    # Load configuration
    try:
        print(f"📧 SMTP Host: {Config.SMTP_HOST}")
        print(f"📧 SMTP Port: {Config.SMTP_PORT}")
        print(f"📧 From Email: {Config.FROM_EMAIL}")
        print(f"📧 Username: {Config.SMTP_USERNAME}")
        print(f"📧 Password: {'*' * len(Config.SMTP_PASSWORD) if Config.SMTP_PASSWORD else 'NOT SET'}")
        print()
        
        if not Config.SMTP_PASSWORD or Config.SMTP_PASSWORD == "your_app_password_here_replace_this":
            print("❌ SMTP Password not configured!")
            print("Please set up a Gmail App Password and update the .env file.")
            print("See: https://support.google.com/accounts/answer/185833")
            return False
            
        # Test email service
        email_service = EmailService()
        
        print("📤 Sending test email...")
        
        # Create a simple markdown release log for testing
        test_markdown_log = """# 🧪 Test Release Log

## Test Information
- **Repository:** test/repository  
- **Test Time:** {}
- **System:** GitHub Release Log Generator

## Test Status
✅ Email configuration is working correctly!

If you receive this email, the email functionality has been successfully tested.

**Generated by:** GitHub Release Log Generator
        """.format(os.popen('date').read().strip())
        
        result = email_service.send_email(
            recipient_email=Config.FROM_EMAIL,  # Send to yourself
            subject="🧪 Test Email - GitHub Release Log Generator",
            release_log=test_markdown_log,
            repository="test/repository"
        )
        
        if result:
            print("✅ Test email sent successfully!")
            print(f"📬 Check your mailbox: {Config.FROM_EMAIL}")
            return True
        else:
            print("❌ Failed to send test email")
            return False
            
    except Exception as e:
        print(f"❌ Error: {e}")
        return False

def main():
    """Main test function"""
    print("🚀 GitHub Release Log Generator - Email Test")
    print("=" * 60)
    
    success = test_email_connection()
    
    print("\n" + "=" * 60)
    if success:
        print("✅ EMAIL TEST PASSED!")
        print("Your email configuration is working correctly.")
        print("You can now use the full system with confidence.")
    else:
        print("❌ EMAIL TEST FAILED!")
        print("Please check your email configuration and try again.")
        
    print("=" * 60)

if __name__ == "__main__":
    main()
